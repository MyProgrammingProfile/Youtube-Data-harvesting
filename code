from googleapiclient.discovery import build
import pymongo
import pandas as pd


def Api_connect():
    Api_Id="AIzaSyCFQBvIve51quYI4aCkaE5AjpLfwUxGJUc"
    api_service_name = "youtube"
    api_version = "v3"
    youtube = build(api_service_name,api_version,developerKey=Api_Id)
    return youtube                                           #return function
youtube=Api_connect()

def get_channel_info(channel_id):
    request = youtube.channels().list(                           #API reference
                        part = "snippet,contentDetails,Statistics",
                        id =channel_id)
                    
    response=request.execute()

    for i in response["items"]:                   
                details = dict(
                            Channel_Name =i["snippet"]["title"],
                            Channel_Id = i["id"],
                            Subscription_Count= i["statistics"]["subscriberCount"],
                            Views = i["statistics"]["viewCount"],
                            Total_Videos =i["statistics"]["videoCount"],
                            Channel_Description = i["snippet"]["description"],
                            Playlist_Id = i["contentDetails"]["relatedPlaylists"]["uploads"]
                        )
    return details
channel_details=get_channel_info("UCXFZvm0_pzPmWUWAJJ5rDYA")
channel_details
def get_video_ids(channel_id):
    video_ids=[]
    response= youtube.channels().list(id=channel_id,
                                    part='contentDetails').execute()

    Playlist_Id = response['items'][0]['contentDetails']['relatedPlaylists']['uploads']
    next_page_token = None

    while True:
        response = youtube.playlistItems().list(    part = 'snippet',
                                            playlistId = Playlist_Id, 
                                            maxResults = 50,
                                            pageToken = next_page_token).execute() 
        for i in range(len(response['items'])):
         video_ids.append(response['items'][i]['snippet']['resourceId']['videoId'])
         next_page_token = response.get('nextPageToken')
            
        if next_page_token is None:
         break
    return video_ids
    
Video_Ids=get_video_ids("UCdmDDJXog3qWbYAf7Gud8vQ")
Video_Ids
def get_video_info(video_ids):

    video_data=[]
    for video_id in video_ids:

     request = youtube.videos().list(
                        part="snippet,contentDetails,statistics",
                        id= video_id)
    response = request.execute()
    for item in response["items"]:
                data = dict(Channel_Name = item['snippet']['channelTitle'],
                            Channel_Id = item['snippet']['channelId'],
                            Video_Id = item['id'],
                            Title = item['snippet']['title'],
                            Tags = item['snippet'].get('tags'),
                            Thumbnail = item['snippet']['thumbnails']['default']['url'],
                            Description = item['snippet']['description'],
                            Published_Date = item['snippet']['publishedAt'],
                            Duration = item['contentDetails']['duration'],
                            Views = item['statistics']['viewCount'],
                            Likes = item['statistics'].get('likeCount'),
                            Comments = item['statistics'].get('commentCount'),
                            Favorite_Count = item['statistics']['favoriteCount'],
                            Definition = item['contentDetails']['definition'],
                            Caption_Status = item['contentDetails']['caption']
                            )
                video_data.append(data)
    return video_data
Video_details=get_video_info(Video_Ids)
Video_details

def get_comment_info(video_ids):

        Comment_data = []
        try:
           for video_id in video_ids:
            request = youtube.commentThreads().list(
                                        part = "snippet",
                                        videoId = video_id,
                                        maxResults = 50
                                        )
           response = request.execute()
           for item in response["items"]:
                                        data= dict(
                                                Comment_Id = item["snippet"]["topLevelComment"]["id"],
                                                Video_Id = item["snippet"]["videoId"],
                                                Comment_Text = item["snippet"]["topLevelComment"]["snippet"]["textOriginal"],
                                                Comment_Author = item["snippet"]["topLevelComment"]["snippet"]["authorDisplayName"],
                                                Comment_Published = item["snippet"]["topLevelComment"]["snippet"]["publishedAt"])
                                        Comment_data.append(data)
        except:
          pass
        return data
comment_details=get_comment_info(Video_Ids)
comment_details
client = pymongo.MongoClient("mongodb+srv://ramyaprincess71:NoThDqgQKZBPbvwx@cluster0.kjooz2c.mongodb.net/?retryWrites=true&w=majority")
db=client["youtube_data"]

def channel_details(channel_id):
    ch_details=get_channel_info(channel_id)
    vi_ids=get_video_ids(channel_id)
    vi_details=get_video_info(vi_ids)
    com_details=get_comment_info(vi_ids)

    coll1=db["channel_details"]
    coll1.insert_one({"channel_information":ch_details, "video information":vi_details,"video ids":vi_ids,"comment information":com_details})
    return "uploaded successfully"
insert=channel_details("UCP4k407eomZThGHo_9sgMkg")
